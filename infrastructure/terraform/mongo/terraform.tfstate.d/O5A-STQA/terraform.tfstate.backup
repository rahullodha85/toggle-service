{
    "version": 3,
    "terraform_version": "0.9.11",
    "serial": 9,
    "lineage": "1c5c4ff5-d240-4162-aba2-47e8b0c56cd8",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "db_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "toggle"
                },
                "db_password_key": {
                    "sensitive": false,
                    "type": "string",
                    "value": "mongoPassword"
                },
                "db_username": {
                    "sensitive": false,
                    "type": "string",
                    "value": "username"
                },
                "ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.26.112.206"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "mongo_replica_set"
            ],
            "outputs": {
                "ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.26.112.206"
                },
                "public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": ""
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "mongo_replica_set",
                "iam_profile"
            ],
            "outputs": {
                "instance_profile_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "mongo_rs-toggle_service-O5A-STQA"
                }
            },
            "resources": {
                "aws_iam_instance_profile.read_s3": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.instance"
                    ],
                    "primary": {
                        "id": "mongo_rs-toggle_service-O5A-STQA",
                        "attributes": {
                            "arn": "arn:aws:iam::195056086334:instance-profile/mongo_rs-toggle_service-O5A-STQA",
                            "id": "mongo_rs-toggle_service-O5A-STQA",
                            "name": "mongo_rs-toggle_service-O5A-STQA",
                            "path": "/",
                            "role": "mongo_rs-toggle_service-O5A-STQA",
                            "roles.#": "1",
                            "roles.2167766189": "mongo_rs-toggle_service-O5A-STQA",
                            "unique_id": "AIPAI7CFOQBRLRGGJWC44"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.instance": {
                    "type": "aws_iam_role",
                    "depends_on": [
                        "data.aws_iam_policy_document.instance"
                    ],
                    "primary": {
                        "id": "mongo_rs-toggle_service-O5A-STQA",
                        "attributes": {
                            "arn": "arn:aws:iam::195056086334:role/mongo_rs-toggle_service-O5A-STQA",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-08-23T19:28:52Z",
                            "id": "mongo_rs-toggle_service-O5A-STQA",
                            "name": "mongo_rs-toggle_service-O5A-STQA",
                            "path": "/",
                            "unique_id": "AROAJNMJC74IP5VTHXJPC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy.test_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.instance",
                        "data.aws_iam_policy_document.read_s3"
                    ],
                    "primary": {
                        "id": "mongo_rs-toggle_service-O5A-STQA:mongo_rs-toggle_service-O5A-STQA",
                        "attributes": {
                            "id": "mongo_rs-toggle_service-O5A-STQA:mongo_rs-toggle_service-O5A-STQA",
                            "name": "mongo_rs-toggle_service-O5A-STQA",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::mongo_rs-toggle_service-O5A-STQA/*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:ListBucket\",\n      \"Resource\": \"arn:aws:s3:::mongo_rs-toggle_service-O5A-STQA\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ssm:GetParameters\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:Decrypt\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                            "role": "mongo_rs-toggle_service-O5A-STQA"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_iam_policy_document.instance": {
                    "type": "aws_iam_policy_document",
                    "depends_on": [],
                    "primary": {
                        "id": "1903849331",
                        "attributes": {
                            "id": "1903849331",
                            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
                            "statement.#": "1",
                            "statement.0.actions.#": "1",
                            "statement.0.actions.2528466339": "sts:AssumeRole",
                            "statement.0.condition.#": "0",
                            "statement.0.effect": "Allow",
                            "statement.0.not_actions.#": "0",
                            "statement.0.not_principals.#": "0",
                            "statement.0.not_resources.#": "0",
                            "statement.0.principals.#": "1",
                            "statement.0.principals.1134724139.identifiers.#": "1",
                            "statement.0.principals.1134724139.identifiers.3655884555": "ec2.amazonaws.com",
                            "statement.0.principals.1134724139.type": "Service",
                            "statement.0.resources.#": "0",
                            "statement.0.sid": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_iam_policy_document.read_s3": {
                    "type": "aws_iam_policy_document",
                    "depends_on": [],
                    "primary": {
                        "id": "2262986883",
                        "attributes": {
                            "id": "2262986883",
                            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::mongo_rs-toggle_service-O5A-STQA/*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:ListBucket\",\n      \"Resource\": \"arn:aws:s3:::mongo_rs-toggle_service-O5A-STQA\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ssm:GetParameters\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:Decrypt\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                            "statement.#": "4",
                            "statement.0.actions.#": "1",
                            "statement.0.actions.2071725391": "s3:GetObject",
                            "statement.0.condition.#": "0",
                            "statement.0.effect": "Allow",
                            "statement.0.not_actions.#": "0",
                            "statement.0.not_principals.#": "0",
                            "statement.0.not_resources.#": "0",
                            "statement.0.principals.#": "0",
                            "statement.0.resources.#": "1",
                            "statement.0.resources.4241351867": "arn:aws:s3:::mongo_rs-toggle_service-O5A-STQA/*",
                            "statement.0.sid": "",
                            "statement.1.actions.#": "1",
                            "statement.1.actions.486976917": "s3:ListBucket",
                            "statement.1.condition.#": "0",
                            "statement.1.effect": "Allow",
                            "statement.1.not_actions.#": "0",
                            "statement.1.not_principals.#": "0",
                            "statement.1.not_resources.#": "0",
                            "statement.1.principals.#": "0",
                            "statement.1.resources.#": "1",
                            "statement.1.resources.2720812219": "arn:aws:s3:::mongo_rs-toggle_service-O5A-STQA",
                            "statement.1.sid": "",
                            "statement.2.actions.#": "1",
                            "statement.2.actions.747502271": "ssm:GetParameters",
                            "statement.2.condition.#": "0",
                            "statement.2.effect": "Allow",
                            "statement.2.not_actions.#": "0",
                            "statement.2.not_principals.#": "0",
                            "statement.2.not_resources.#": "0",
                            "statement.2.principals.#": "0",
                            "statement.2.resources.#": "1",
                            "statement.2.resources.2679715827": "*",
                            "statement.2.sid": "",
                            "statement.3.actions.#": "1",
                            "statement.3.actions.3733000735": "kms:Decrypt",
                            "statement.3.condition.#": "0",
                            "statement.3.effect": "Allow",
                            "statement.3.not_actions.#": "0",
                            "statement.3.not_principals.#": "0",
                            "statement.3.not_resources.#": "0",
                            "statement.3.principals.#": "0",
                            "statement.3.resources.#": "1",
                            "statement.3.resources.2679715827": "*",
                            "statement.3.sid": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "mongo_replica_set",
                "primary_node"
            ],
            "outputs": {
                "ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.26.112.206"
                },
                "public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": ""
                }
            },
            "resources": {
                "aws_instance.mongo_node": {
                    "type": "aws_instance",
                    "depends_on": [
                        "data.aws_ami.mongo_base_ami",
                        "data.template_file.initialize_replica_set"
                    ],
                    "primary": {
                        "id": "i-0d1c246e6cf82d416",
                        "attributes": {
                            "ami": "ami-65491b1e",
                            "associate_public_ip_address": "false",
                            "availability_zone": "us-east-1a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "1",
                            "ebs_block_device.4023988449.delete_on_termination": "true",
                            "ebs_block_device.4023988449.device_name": "/dev/xvdf",
                            "ebs_block_device.4023988449.encrypted": "false",
                            "ebs_block_device.4023988449.iops": "600",
                            "ebs_block_device.4023988449.snapshot_id": "",
                            "ebs_block_device.4023988449.volume_size": "200",
                            "ebs_block_device.4023988449.volume_type": "gp2",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "mongo_rs-toggle_service-O5A-STQA",
                            "id": "i-0d1c246e6cf82d416",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "rogue_squadron_shared",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-2c81f98d",
                            "primary_network_interface_id": "eni-2c81f98d",
                            "private_dns": "ip-172-26-112-206.ec2.internal",
                            "private_ip": "172.26.112.206",
                            "public_dns": "",
                            "public_ip": "",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-809e0aac",
                            "tags.%": "4",
                            "tags.Name": "PrimaryMongo-toggle_service-O5A-STQA",
                            "tags.hbc_banner": "o5a",
                            "tags.hbc_env": "stqa",
                            "tags.hbc_group": "rogue-squadron",
                            "tenancy": "default",
                            "user_data": "15d42079005ffa5408431c4eaf20a35c9046bbb9",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2434876198": "sg-400f3731"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_ami.mongo_base_ami": {
                    "type": "aws_ami",
                    "depends_on": [],
                    "primary": {
                        "id": "ami-65491b1e",
                        "attributes": {
                            "architecture": "x86_64",
                            "block_device_mappings.#": "1",
                            "block_device_mappings.340275815.device_name": "/dev/xvda",
                            "block_device_mappings.340275815.ebs.%": "6",
                            "block_device_mappings.340275815.ebs.delete_on_termination": "true",
                            "block_device_mappings.340275815.ebs.encrypted": "false",
                            "block_device_mappings.340275815.ebs.iops": "0",
                            "block_device_mappings.340275815.ebs.snapshot_id": "snap-07396001fb2360ac9",
                            "block_device_mappings.340275815.ebs.volume_size": "8",
                            "block_device_mappings.340275815.ebs.volume_type": "gp2",
                            "block_device_mappings.340275815.no_device": "",
                            "block_device_mappings.340275815.virtual_name": "",
                            "creation_date": "2017-07-25T13:45:16.000Z",
                            "filter.#": "1",
                            "filter.3051173923.name": "name",
                            "filter.3051173923.values.#": "1",
                            "filter.3051173923.values.0": "mongo_base",
                            "hypervisor": "xen",
                            "id": "ami-65491b1e",
                            "image_id": "ami-65491b1e",
                            "image_location": "195056086334/mongo_base",
                            "image_type": "machine",
                            "most_recent": "false",
                            "name": "mongo_base",
                            "owner_id": "195056086334",
                            "product_codes.#": "0",
                            "public": "false",
                            "root_device_name": "/dev/xvda",
                            "root_device_type": "ebs",
                            "sriov_net_support": "simple",
                            "state": "available",
                            "state_reason.%": "2",
                            "state_reason.code": "UNSET",
                            "state_reason.message": "UNSET",
                            "tags.#": "0",
                            "virtualization_type": "hvm"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.initialize_replica_set": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "4ad78f86d63471f1a9e44ad670957c7f72a4d23b5aa10c08d8f25e48714c410b",
                        "attributes": {
                            "id": "4ad78f86d63471f1a9e44ad670957c7f72a4d23b5aa10c08d8f25e48714c410b",
                            "rendered": "#!/bin/bash\n\nset -ex\n\nsudo -iu root\n\n# Wait for internet connectivity\nuntil ping -c 1 ietf.org\ndo\n  sleep 5;\ndone\n\nservice mongod stop\n\n# Mount EBS device to Mongo data file\nmkfs -t ext4 /dev/xvdf\nmkdir -p /data/db\nmount /dev/xvdf /data/db\n\n# Start Mongo with replica set\naws s3 cp s3://mongo_rs-toggle_service-O5A-STQA/keyfile ~/mongo-cluster-keyfile\nchmod 400 ~/mongo-cluster-keyfile\n\nmongod --replSet \"toggle_service-O5A-STQA\" --keyFile ~/mongo-cluster-keyfile --syslog \u0026\n\n# Wait for Mongo to start\nuntil egrep -i \"waiting for connections on port\" /var/log/messages\ndo\n  sleep 1;\ndone\n\n# Initiate Mongo replica set. If condition makes sure this only runs on Primary Node\nif [ ! -z \"172.26.112.9\" ]; then\n\nuntil nc -z 172.26.112.9 27017; do sleep 2; done\nuntil nc -z 172.26.112.138 27017; do sleep 2; done\n\nexport IP=`/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1`\n\nexport admin_password=$(aws ssm get-parameters --names /toggle-service/o5a/stqa/mongoAdminPassword --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo \u003c\u003cEOF\nuse admin\n\nrs.initiate(\n   {\n      _id: \"toggle_service-O5A-STQA\",\n      version: 1,\n      members: [\n         { _id: 0, host : \"$IP:27017\" },\n         { _id: 1, host : \"172.26.112.9:27017\" },\n         { _id: 2, host : \"172.26.112.138:27017\" }\n      ]\n   }\n)\n\nwhile(rs.status().members[0].stateStr !== \"PRIMARY\") {\n  print(\"Waiting for master...\");\n  sleep(1000);\n}\n\nsleep(5000);\n\nuse admin\n\ndb.createUser(\n  {\n    \"user\" : \"admin\",\n    \"pwd\" : \"$admin_password\",\n    roles: [ { \"role\" : \"userAdminAnyDatabase\", \"db\" : \"admin\" }, { \"role\" : \"clusterAdmin\", \"db\" : \"admin\" } ]\n  }\n)\nEOF\n\nexport db_password=$(aws ssm get-parameters --names /toggle-service/o5a/stqa/mongoPassword --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo admin -u admin -p $admin_password \u003c\u003cEOF\n\nuse toggle\n\ndb.createUser(\n  {\n    \"user\" : \"username\",\n    \"pwd\"  : \"$db_password\",\n    roles: [ { \"role\" : \"readWrite\", \"db\" : \"toggle\" } ]\n   }\n)\nEOF\n\nfi\n",
                            "template": "#!/bin/bash\n\nset -ex\n\nsudo -iu root\n\n# Wait for internet connectivity\nuntil ping -c 1 ietf.org\ndo\n  sleep 5;\ndone\n\nservice mongod stop\n\n# Mount EBS device to Mongo data file\nmkfs -t ext4 /dev/xvdf\nmkdir -p /data/db\nmount /dev/xvdf /data/db\n\n# Start Mongo with replica set\naws s3 cp s3://${s3_bucket_name}/keyfile ~/mongo-cluster-keyfile\nchmod 400 ~/mongo-cluster-keyfile\n\nmongod --replSet \"${replica_set_name}\" --keyFile ~/mongo-cluster-keyfile --syslog \u0026\n\n# Wait for Mongo to start\nuntil egrep -i \"waiting for connections on port\" /var/log/messages\ndo\n  sleep 1;\ndone\n\n# Initiate Mongo replica set. If condition makes sure this only runs on Primary Node\nif [ ! -z \"${secondary0_ip}\" ]; then\n\nuntil nc -z ${secondary0_ip} ${port}; do sleep 2; done\nuntil nc -z ${secondary1_ip} ${port}; do sleep 2; done\n\nexport IP=`/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1`\n\nexport admin_password=$(aws ssm get-parameters --names ${parameter_key_namespace}/${admin_password_key} --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo \u003c\u003cEOF\nuse admin\n\nrs.initiate(\n   {\n      _id: \"${replica_set_name}\",\n      version: 1,\n      members: [\n         { _id: 0, host : \"$IP:${port}\" },\n         { _id: 1, host : \"${secondary0_ip}:${port}\" },\n         { _id: 2, host : \"${secondary1_ip}:${port}\" }\n      ]\n   }\n)\n\nwhile(rs.status().members[0].stateStr !== \"PRIMARY\") {\n  print(\"Waiting for master...\");\n  sleep(1000);\n}\n\nsleep(5000);\n\nuse admin\n\ndb.createUser(\n  {\n    \"user\" : \"${admin_username}\",\n    \"pwd\" : \"$admin_password\",\n    roles: [ { \"role\" : \"userAdminAnyDatabase\", \"db\" : \"admin\" }, { \"role\" : \"clusterAdmin\", \"db\" : \"admin\" } ]\n  }\n)\nEOF\n\nexport db_password=$(aws ssm get-parameters --names ${parameter_key_namespace}/${db_password_key} --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo admin -u ${admin_username} -p $admin_password \u003c\u003cEOF\n\nuse ${db_name}\n\ndb.createUser(\n  {\n    \"user\" : \"${db_username}\",\n    \"pwd\"  : \"$db_password\",\n    roles: [ { \"role\" : \"readWrite\", \"db\" : \"${db_name}\" } ]\n   }\n)\nEOF\n\nfi\n",
                            "vars.%": "12",
                            "vars.admin_password_key": "mongoAdminPassword",
                            "vars.admin_username": "admin",
                            "vars.db_name": "toggle",
                            "vars.db_password_key": "mongoPassword",
                            "vars.db_username": "username",
                            "vars.mongo_version": "3.4",
                            "vars.parameter_key_namespace": "/toggle-service/o5a/stqa",
                            "vars.port": "27017",
                            "vars.replica_set_name": "toggle_service-O5A-STQA",
                            "vars.s3_bucket_name": "mongo_rs-toggle_service-O5A-STQA",
                            "vars.secondary0_ip": "172.26.112.9",
                            "vars.secondary1_ip": "172.26.112.138"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "mongo_replica_set",
                "s3"
            ],
            "outputs": {
                "s3_bucket_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "mongo_rs-toggle_service-O5A-STQA"
                }
            },
            "resources": {
                "aws_s3_bucket.bootstrap_mongo": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "mongo_rs-toggle_service-O5A-STQA",
                        "attributes": {
                            "acceleration_status": "",
                            "acl": "private",
                            "arn": "arn:aws:s3:::mongo_rs-toggle_service-O5A-STQA",
                            "bucket": "mongo_rs-toggle_service-O5A-STQA",
                            "bucket_domain_name": "mongo_rs-toggle_service-O5A-STQA.s3.amazonaws.com",
                            "force_destroy": "false",
                            "hosted_zone_id": "Z3AQBSTGFYJSTF",
                            "id": "mongo_rs-toggle_service-O5A-STQA",
                            "logging.#": "0",
                            "region": "us-east-1",
                            "request_payer": "BucketOwner",
                            "tags.%": "0",
                            "versioning.#": "1",
                            "versioning.0.enabled": "true",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_s3_bucket_object.mongo_keyfile": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "aws_s3_bucket.bootstrap_mongo"
                    ],
                    "primary": {
                        "id": "keyfile",
                        "attributes": {
                            "acl": "private",
                            "bucket": "mongo_rs-toggle_service-O5A-STQA",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "80ddbf6ad8ed5f556e708e28af9aecf2",
                            "id": "keyfile",
                            "key": "keyfile",
                            "server_side_encryption": "",
                            "source": "./mongo-key",
                            "storage_class": "STANDARD",
                            "tags.%": "3",
                            "tags.hbc_banner": "o5a",
                            "tags.hbc_env": "stqa",
                            "tags.hbc_group": "rogue-squadron",
                            "version_id": "9dIc89MyC7V8BjgxkEyW_8hz_NDXw3wj"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "mongo_replica_set",
                "secondary_node0"
            ],
            "outputs": {
                "ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.26.112.9"
                },
                "public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": ""
                }
            },
            "resources": {
                "aws_instance.mongo_node": {
                    "type": "aws_instance",
                    "depends_on": [
                        "data.aws_ami.mongo_base_ami",
                        "data.template_file.initialize_replica_set"
                    ],
                    "primary": {
                        "id": "i-0b862058b7a1e91f8",
                        "attributes": {
                            "ami": "ami-65491b1e",
                            "associate_public_ip_address": "false",
                            "availability_zone": "us-east-1a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "1",
                            "ebs_block_device.4023988449.delete_on_termination": "true",
                            "ebs_block_device.4023988449.device_name": "/dev/xvdf",
                            "ebs_block_device.4023988449.encrypted": "false",
                            "ebs_block_device.4023988449.iops": "600",
                            "ebs_block_device.4023988449.snapshot_id": "",
                            "ebs_block_device.4023988449.volume_size": "200",
                            "ebs_block_device.4023988449.volume_type": "gp2",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "mongo_rs-toggle_service-O5A-STQA",
                            "id": "i-0b862058b7a1e91f8",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "rogue_squadron_shared",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-8a8bf32b",
                            "primary_network_interface_id": "eni-8a8bf32b",
                            "private_dns": "ip-172-26-112-9.ec2.internal",
                            "private_ip": "172.26.112.9",
                            "public_dns": "",
                            "public_ip": "",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-809e0aac",
                            "tags.%": "4",
                            "tags.Name": "SecondaryMongo0-toggle_service-O5A-STQA",
                            "tags.hbc_banner": "o5a",
                            "tags.hbc_env": "stqa",
                            "tags.hbc_group": "rogue-squadron",
                            "tenancy": "default",
                            "user_data": "b15fd093fc6c07900f4d233d1eabc0ff76fec205",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2434876198": "sg-400f3731"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_ami.mongo_base_ami": {
                    "type": "aws_ami",
                    "depends_on": [],
                    "primary": {
                        "id": "ami-65491b1e",
                        "attributes": {
                            "architecture": "x86_64",
                            "block_device_mappings.#": "1",
                            "block_device_mappings.340275815.device_name": "/dev/xvda",
                            "block_device_mappings.340275815.ebs.%": "6",
                            "block_device_mappings.340275815.ebs.delete_on_termination": "true",
                            "block_device_mappings.340275815.ebs.encrypted": "false",
                            "block_device_mappings.340275815.ebs.iops": "0",
                            "block_device_mappings.340275815.ebs.snapshot_id": "snap-07396001fb2360ac9",
                            "block_device_mappings.340275815.ebs.volume_size": "8",
                            "block_device_mappings.340275815.ebs.volume_type": "gp2",
                            "block_device_mappings.340275815.no_device": "",
                            "block_device_mappings.340275815.virtual_name": "",
                            "creation_date": "2017-07-25T13:45:16.000Z",
                            "filter.#": "1",
                            "filter.3051173923.name": "name",
                            "filter.3051173923.values.#": "1",
                            "filter.3051173923.values.0": "mongo_base",
                            "hypervisor": "xen",
                            "id": "ami-65491b1e",
                            "image_id": "ami-65491b1e",
                            "image_location": "195056086334/mongo_base",
                            "image_type": "machine",
                            "most_recent": "false",
                            "name": "mongo_base",
                            "owner_id": "195056086334",
                            "product_codes.#": "0",
                            "public": "false",
                            "root_device_name": "/dev/xvda",
                            "root_device_type": "ebs",
                            "sriov_net_support": "simple",
                            "state": "available",
                            "state_reason.%": "2",
                            "state_reason.code": "UNSET",
                            "state_reason.message": "UNSET",
                            "tags.#": "0",
                            "virtualization_type": "hvm"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.initialize_replica_set": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "93ee75872e558205bc3a2b32850858987f18876b4c41f7dd4fe308623e3e9376",
                        "attributes": {
                            "id": "93ee75872e558205bc3a2b32850858987f18876b4c41f7dd4fe308623e3e9376",
                            "rendered": "#!/bin/bash\n\nset -ex\n\nsudo -iu root\n\n# Wait for internet connectivity\nuntil ping -c 1 ietf.org\ndo\n  sleep 5;\ndone\n\nservice mongod stop\n\n# Mount EBS device to Mongo data file\nmkfs -t ext4 /dev/xvdf\nmkdir -p /data/db\nmount /dev/xvdf /data/db\n\n# Start Mongo with replica set\naws s3 cp s3://mongo_rs-toggle_service-O5A-STQA/keyfile ~/mongo-cluster-keyfile\nchmod 400 ~/mongo-cluster-keyfile\n\nmongod --replSet \"toggle_service-O5A-STQA\" --keyFile ~/mongo-cluster-keyfile --syslog \u0026\n\n# Wait for Mongo to start\nuntil egrep -i \"waiting for connections on port\" /var/log/messages\ndo\n  sleep 1;\ndone\n\n# Initiate Mongo replica set. If condition makes sure this only runs on Primary Node\nif [ ! -z \"\" ]; then\n\nuntil nc -z  27017; do sleep 2; done\nuntil nc -z  27017; do sleep 2; done\n\nexport IP=`/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1`\n\nexport admin_password=$(aws ssm get-parameters --names /toggle-service/o5a/stqa/mongoAdminPassword --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo \u003c\u003cEOF\nuse admin\n\nrs.initiate(\n   {\n      _id: \"toggle_service-O5A-STQA\",\n      version: 1,\n      members: [\n         { _id: 0, host : \"$IP:27017\" },\n         { _id: 1, host : \":27017\" },\n         { _id: 2, host : \":27017\" }\n      ]\n   }\n)\n\nwhile(rs.status().members[0].stateStr !== \"PRIMARY\") {\n  print(\"Waiting for master...\");\n  sleep(1000);\n}\n\nsleep(5000);\n\nuse admin\n\ndb.createUser(\n  {\n    \"user\" : \"admin\",\n    \"pwd\" : \"$admin_password\",\n    roles: [ { \"role\" : \"userAdminAnyDatabase\", \"db\" : \"admin\" }, { \"role\" : \"clusterAdmin\", \"db\" : \"admin\" } ]\n  }\n)\nEOF\n\nexport db_password=$(aws ssm get-parameters --names /toggle-service/o5a/stqa/mongoPassword --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo admin -u admin -p $admin_password \u003c\u003cEOF\n\nuse toggle\n\ndb.createUser(\n  {\n    \"user\" : \"username\",\n    \"pwd\"  : \"$db_password\",\n    roles: [ { \"role\" : \"readWrite\", \"db\" : \"toggle\" } ]\n   }\n)\nEOF\n\nfi\n",
                            "template": "#!/bin/bash\n\nset -ex\n\nsudo -iu root\n\n# Wait for internet connectivity\nuntil ping -c 1 ietf.org\ndo\n  sleep 5;\ndone\n\nservice mongod stop\n\n# Mount EBS device to Mongo data file\nmkfs -t ext4 /dev/xvdf\nmkdir -p /data/db\nmount /dev/xvdf /data/db\n\n# Start Mongo with replica set\naws s3 cp s3://${s3_bucket_name}/keyfile ~/mongo-cluster-keyfile\nchmod 400 ~/mongo-cluster-keyfile\n\nmongod --replSet \"${replica_set_name}\" --keyFile ~/mongo-cluster-keyfile --syslog \u0026\n\n# Wait for Mongo to start\nuntil egrep -i \"waiting for connections on port\" /var/log/messages\ndo\n  sleep 1;\ndone\n\n# Initiate Mongo replica set. If condition makes sure this only runs on Primary Node\nif [ ! -z \"${secondary0_ip}\" ]; then\n\nuntil nc -z ${secondary0_ip} ${port}; do sleep 2; done\nuntil nc -z ${secondary1_ip} ${port}; do sleep 2; done\n\nexport IP=`/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1`\n\nexport admin_password=$(aws ssm get-parameters --names ${parameter_key_namespace}/${admin_password_key} --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo \u003c\u003cEOF\nuse admin\n\nrs.initiate(\n   {\n      _id: \"${replica_set_name}\",\n      version: 1,\n      members: [\n         { _id: 0, host : \"$IP:${port}\" },\n         { _id: 1, host : \"${secondary0_ip}:${port}\" },\n         { _id: 2, host : \"${secondary1_ip}:${port}\" }\n      ]\n   }\n)\n\nwhile(rs.status().members[0].stateStr !== \"PRIMARY\") {\n  print(\"Waiting for master...\");\n  sleep(1000);\n}\n\nsleep(5000);\n\nuse admin\n\ndb.createUser(\n  {\n    \"user\" : \"${admin_username}\",\n    \"pwd\" : \"$admin_password\",\n    roles: [ { \"role\" : \"userAdminAnyDatabase\", \"db\" : \"admin\" }, { \"role\" : \"clusterAdmin\", \"db\" : \"admin\" } ]\n  }\n)\nEOF\n\nexport db_password=$(aws ssm get-parameters --names ${parameter_key_namespace}/${db_password_key} --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo admin -u ${admin_username} -p $admin_password \u003c\u003cEOF\n\nuse ${db_name}\n\ndb.createUser(\n  {\n    \"user\" : \"${db_username}\",\n    \"pwd\"  : \"$db_password\",\n    roles: [ { \"role\" : \"readWrite\", \"db\" : \"${db_name}\" } ]\n   }\n)\nEOF\n\nfi\n",
                            "vars.%": "12",
                            "vars.admin_password_key": "mongoAdminPassword",
                            "vars.admin_username": "admin",
                            "vars.db_name": "toggle",
                            "vars.db_password_key": "mongoPassword",
                            "vars.db_username": "username",
                            "vars.mongo_version": "3.4",
                            "vars.parameter_key_namespace": "/toggle-service/o5a/stqa",
                            "vars.port": "27017",
                            "vars.replica_set_name": "toggle_service-O5A-STQA",
                            "vars.s3_bucket_name": "mongo_rs-toggle_service-O5A-STQA",
                            "vars.secondary0_ip": "",
                            "vars.secondary1_ip": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "mongo_replica_set",
                "secondary_node1"
            ],
            "outputs": {
                "ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.26.112.138"
                },
                "public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": ""
                }
            },
            "resources": {
                "aws_instance.mongo_node": {
                    "type": "aws_instance",
                    "depends_on": [
                        "data.aws_ami.mongo_base_ami",
                        "data.template_file.initialize_replica_set"
                    ],
                    "primary": {
                        "id": "i-05a81baa738650805",
                        "attributes": {
                            "ami": "ami-65491b1e",
                            "associate_public_ip_address": "false",
                            "availability_zone": "us-east-1a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "1",
                            "ebs_block_device.4023988449.delete_on_termination": "true",
                            "ebs_block_device.4023988449.device_name": "/dev/xvdf",
                            "ebs_block_device.4023988449.encrypted": "false",
                            "ebs_block_device.4023988449.iops": "600",
                            "ebs_block_device.4023988449.snapshot_id": "",
                            "ebs_block_device.4023988449.volume_size": "200",
                            "ebs_block_device.4023988449.volume_type": "gp2",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "mongo_rs-toggle_service-O5A-STQA",
                            "id": "i-05a81baa738650805",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "rogue_squadron_shared",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-258cf484",
                            "primary_network_interface_id": "eni-258cf484",
                            "private_dns": "ip-172-26-112-138.ec2.internal",
                            "private_ip": "172.26.112.138",
                            "public_dns": "",
                            "public_ip": "",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-809e0aac",
                            "tags.%": "4",
                            "tags.Name": "SecondaryMongo1-toggle_service-O5A-STQA",
                            "tags.hbc_banner": "o5a",
                            "tags.hbc_env": "stqa",
                            "tags.hbc_group": "rogue-squadron",
                            "tenancy": "default",
                            "user_data": "b15fd093fc6c07900f4d233d1eabc0ff76fec205",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2434876198": "sg-400f3731"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_ami.mongo_base_ami": {
                    "type": "aws_ami",
                    "depends_on": [],
                    "primary": {
                        "id": "ami-65491b1e",
                        "attributes": {
                            "architecture": "x86_64",
                            "block_device_mappings.#": "1",
                            "block_device_mappings.340275815.device_name": "/dev/xvda",
                            "block_device_mappings.340275815.ebs.%": "6",
                            "block_device_mappings.340275815.ebs.delete_on_termination": "true",
                            "block_device_mappings.340275815.ebs.encrypted": "false",
                            "block_device_mappings.340275815.ebs.iops": "0",
                            "block_device_mappings.340275815.ebs.snapshot_id": "snap-07396001fb2360ac9",
                            "block_device_mappings.340275815.ebs.volume_size": "8",
                            "block_device_mappings.340275815.ebs.volume_type": "gp2",
                            "block_device_mappings.340275815.no_device": "",
                            "block_device_mappings.340275815.virtual_name": "",
                            "creation_date": "2017-07-25T13:45:16.000Z",
                            "filter.#": "1",
                            "filter.3051173923.name": "name",
                            "filter.3051173923.values.#": "1",
                            "filter.3051173923.values.0": "mongo_base",
                            "hypervisor": "xen",
                            "id": "ami-65491b1e",
                            "image_id": "ami-65491b1e",
                            "image_location": "195056086334/mongo_base",
                            "image_type": "machine",
                            "most_recent": "false",
                            "name": "mongo_base",
                            "owner_id": "195056086334",
                            "product_codes.#": "0",
                            "public": "false",
                            "root_device_name": "/dev/xvda",
                            "root_device_type": "ebs",
                            "sriov_net_support": "simple",
                            "state": "available",
                            "state_reason.%": "2",
                            "state_reason.code": "UNSET",
                            "state_reason.message": "UNSET",
                            "tags.#": "0",
                            "virtualization_type": "hvm"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.initialize_replica_set": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "93ee75872e558205bc3a2b32850858987f18876b4c41f7dd4fe308623e3e9376",
                        "attributes": {
                            "id": "93ee75872e558205bc3a2b32850858987f18876b4c41f7dd4fe308623e3e9376",
                            "rendered": "#!/bin/bash\n\nset -ex\n\nsudo -iu root\n\n# Wait for internet connectivity\nuntil ping -c 1 ietf.org\ndo\n  sleep 5;\ndone\n\nservice mongod stop\n\n# Mount EBS device to Mongo data file\nmkfs -t ext4 /dev/xvdf\nmkdir -p /data/db\nmount /dev/xvdf /data/db\n\n# Start Mongo with replica set\naws s3 cp s3://mongo_rs-toggle_service-O5A-STQA/keyfile ~/mongo-cluster-keyfile\nchmod 400 ~/mongo-cluster-keyfile\n\nmongod --replSet \"toggle_service-O5A-STQA\" --keyFile ~/mongo-cluster-keyfile --syslog \u0026\n\n# Wait for Mongo to start\nuntil egrep -i \"waiting for connections on port\" /var/log/messages\ndo\n  sleep 1;\ndone\n\n# Initiate Mongo replica set. If condition makes sure this only runs on Primary Node\nif [ ! -z \"\" ]; then\n\nuntil nc -z  27017; do sleep 2; done\nuntil nc -z  27017; do sleep 2; done\n\nexport IP=`/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1`\n\nexport admin_password=$(aws ssm get-parameters --names /toggle-service/o5a/stqa/mongoAdminPassword --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo \u003c\u003cEOF\nuse admin\n\nrs.initiate(\n   {\n      _id: \"toggle_service-O5A-STQA\",\n      version: 1,\n      members: [\n         { _id: 0, host : \"$IP:27017\" },\n         { _id: 1, host : \":27017\" },\n         { _id: 2, host : \":27017\" }\n      ]\n   }\n)\n\nwhile(rs.status().members[0].stateStr !== \"PRIMARY\") {\n  print(\"Waiting for master...\");\n  sleep(1000);\n}\n\nsleep(5000);\n\nuse admin\n\ndb.createUser(\n  {\n    \"user\" : \"admin\",\n    \"pwd\" : \"$admin_password\",\n    roles: [ { \"role\" : \"userAdminAnyDatabase\", \"db\" : \"admin\" }, { \"role\" : \"clusterAdmin\", \"db\" : \"admin\" } ]\n  }\n)\nEOF\n\nexport db_password=$(aws ssm get-parameters --names /toggle-service/o5a/stqa/mongoPassword --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo admin -u admin -p $admin_password \u003c\u003cEOF\n\nuse toggle\n\ndb.createUser(\n  {\n    \"user\" : \"username\",\n    \"pwd\"  : \"$db_password\",\n    roles: [ { \"role\" : \"readWrite\", \"db\" : \"toggle\" } ]\n   }\n)\nEOF\n\nfi\n",
                            "template": "#!/bin/bash\n\nset -ex\n\nsudo -iu root\n\n# Wait for internet connectivity\nuntil ping -c 1 ietf.org\ndo\n  sleep 5;\ndone\n\nservice mongod stop\n\n# Mount EBS device to Mongo data file\nmkfs -t ext4 /dev/xvdf\nmkdir -p /data/db\nmount /dev/xvdf /data/db\n\n# Start Mongo with replica set\naws s3 cp s3://${s3_bucket_name}/keyfile ~/mongo-cluster-keyfile\nchmod 400 ~/mongo-cluster-keyfile\n\nmongod --replSet \"${replica_set_name}\" --keyFile ~/mongo-cluster-keyfile --syslog \u0026\n\n# Wait for Mongo to start\nuntil egrep -i \"waiting for connections on port\" /var/log/messages\ndo\n  sleep 1;\ndone\n\n# Initiate Mongo replica set. If condition makes sure this only runs on Primary Node\nif [ ! -z \"${secondary0_ip}\" ]; then\n\nuntil nc -z ${secondary0_ip} ${port}; do sleep 2; done\nuntil nc -z ${secondary1_ip} ${port}; do sleep 2; done\n\nexport IP=`/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1`\n\nexport admin_password=$(aws ssm get-parameters --names ${parameter_key_namespace}/${admin_password_key} --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo \u003c\u003cEOF\nuse admin\n\nrs.initiate(\n   {\n      _id: \"${replica_set_name}\",\n      version: 1,\n      members: [\n         { _id: 0, host : \"$IP:${port}\" },\n         { _id: 1, host : \"${secondary0_ip}:${port}\" },\n         { _id: 2, host : \"${secondary1_ip}:${port}\" }\n      ]\n   }\n)\n\nwhile(rs.status().members[0].stateStr !== \"PRIMARY\") {\n  print(\"Waiting for master...\");\n  sleep(1000);\n}\n\nsleep(5000);\n\nuse admin\n\ndb.createUser(\n  {\n    \"user\" : \"${admin_username}\",\n    \"pwd\" : \"$admin_password\",\n    roles: [ { \"role\" : \"userAdminAnyDatabase\", \"db\" : \"admin\" }, { \"role\" : \"clusterAdmin\", \"db\" : \"admin\" } ]\n  }\n)\nEOF\n\nexport db_password=$(aws ssm get-parameters --names ${parameter_key_namespace}/${db_password_key} --with-decryption --region us-east-1 | jq .\"Parameters[0].Value\" --raw-output)\n\nmongo admin -u ${admin_username} -p $admin_password \u003c\u003cEOF\n\nuse ${db_name}\n\ndb.createUser(\n  {\n    \"user\" : \"${db_username}\",\n    \"pwd\"  : \"$db_password\",\n    roles: [ { \"role\" : \"readWrite\", \"db\" : \"${db_name}\" } ]\n   }\n)\nEOF\n\nfi\n",
                            "vars.%": "12",
                            "vars.admin_password_key": "mongoAdminPassword",
                            "vars.admin_username": "admin",
                            "vars.db_name": "toggle",
                            "vars.db_password_key": "mongoPassword",
                            "vars.db_username": "username",
                            "vars.mongo_version": "3.4",
                            "vars.parameter_key_namespace": "/toggle-service/o5a/stqa",
                            "vars.port": "27017",
                            "vars.replica_set_name": "toggle_service-O5A-STQA",
                            "vars.s3_bucket_name": "mongo_rs-toggle_service-O5A-STQA",
                            "vars.secondary0_ip": "",
                            "vars.secondary1_ip": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        }
    ]
}
